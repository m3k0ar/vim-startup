" header {{{
"
" The MIT License (MIT)
"
" Copyright (c) 2014 Marek Wywia≈Ç
"
" Permission is hereby granted, free of charge, to any person obtaining a copy
" of this software and associated documentation files (the "Software"), to deal
" in the Software without restriction, including without limitation the rights
" to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
" copies of the Software, and to permit persons to whom the Software is
" furnished to do so, subject to the following conditions:
"
" The above copyright notice and this permission notice shall be included in all
" copies or substantial portions of the Software.
"
" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
" IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
" FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
" AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
" LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
" OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
" SOFTWARE.
"
" header }}}

if &compatible
    set nocompatible
endif


" Respect XDG
if isdirectory($XDG_CONFIG_HOME.'/vim')
	let $VIMPATH=expand('$XDG_CONFIG_HOME/vim')
	let $VARPATH=expand('$XDG_CACHE_HOME/vim')
else
	let $VIMPATH=expand('$HOME/.vim')
	let $VARPATH=expand('$HOME/.cache/vim')
endif

function! s:source_file(path)
	execute 'source' fnameescape($VIMPATH.'/config/'.a:path)
endfunction

function! s:source_home_file(path)
	execute 'source' fnameescape($HOME.'/'.a:path)
endfunction

" Initialize base requirements
call s:source_file('init.vim')

" NeoBundle start plugins {{{
call neobundle#begin(expand('$VARPATH/plugins'))
if neobundle#load_cache()
	NeoBundleFetch 'Shougo/neobundle.vim'
	call s:source_file('neobundle.vim')
	call neobundle#local(expand('$VARPATH/plugins/awesome-vim-colorschemes'), {})
	if ! exists('g:vim_installing')
		NeoBundleSaveCache
	endif
endif
call neobundle#local(expand('$VIMPATH/dev'), {})
call s:source_file('plugins.vim')
if filereadable(expand('$HOME/.vimrc.bundles.local'))
	call s:source_home_file('.vimrc.bundles.local')
endif
call neobundle#end()
" }}}

" Must be after plugins
filetype plugin indent on
syntax enable

" Plugin installation check
if ! has('vim_starting')
	NeoBundleCheck
endif

" Loading configuration modules {{{
call s:source_file('general.vim')
call s:source_file('theme.vim')
call s:source_file('filetype.vim')
call s:source_file('utils.vim')
call s:source_file('bindings.vim')
call s:source_file('tabline.vim')

if filereadable(expand('$HOME/.vimrc.local'))
	call s:source_home_file('.vimrc.local')
endif

if has('nvim')
	call s:source_file('neovim.vim')
endif
" }}}

call neobundle#call_hook('on_source')
set secure

helptags ~/.vim/doc

" vim: set ts=2 sw=2 tw=80 noet :
